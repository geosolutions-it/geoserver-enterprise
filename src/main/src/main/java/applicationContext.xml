<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!--  
        resources
     -->
    <bean id="resourceLoader" class="org.geoserver.platform.GeoServerResourceLoader"/>
    <bean id="dataDirectory" class="org.geoserver.config.GeoServerDataDirectory">
       <constructor-arg ref="resourceLoader"/>
    </bean>
    <bean id="manifestLoader" class="org.geoserver.ManifestLoader">
       <constructor-arg ref="resourceLoader"/>
    </bean>
    
    <!-- extensions -->
    <bean id="extensions" class="org.geoserver.platform.GeoServerExtensions"/>
    
    <!-- geotools factory iterator provider, commented 
    <bean id="factoryIteratorProvider" depends-on="extensions" 
       class="org.geoserver.platform.GeoServerFactoryIteratorProvider"/>
     -->
       
    <!-- 
        core modules
     -->
     
    <!-- configuration module -->
        <!-- note: we use depends to ensure that all datastore plugins are 
             loaded from the spring container before processing hte catalog -->
    
    <bean id="rawCatalog" class="org.geoserver.catalog.impl.CatalogImpl" depends-on="extensions">
         <property name="resourceLoader" ref="resourceLoader"/>  
    </bean>
    <bean id="secureCatalog" class="org.geoserver.security.SecureCatalogImpl" depends-on="accessRulesDao,extensions">
        <constructor-arg ref="rawCatalog" />
    </bean>
    <bean id="localWorkspaceCatalog" class="org.geoserver.catalog.impl.LocalWorkspaceCatalog">
        <constructor-arg ref="secureCatalog" />
    </bean>
    
    <!-- Switch this when you want to enable the secure catalog by default -->
    <!--alias name="secureCatalog" alias="catalog"/-->
    <alias name="localWorkspaceCatalog" alias="catalog"/> 
    
    <bean id="geoServer" class="org.geoserver.config.impl.GeoServerImpl">
      <property name="catalog" ref="catalog"/>
    </bean>
    <bean id="geoServerLoader" class="org.geoserver.config.GeoServerLoaderProxy">
      <constructor-arg ref="resourceLoader"/>
    </bean>
    
    <!-- 
        service strategies 
    -->
    <bean id="serviceStrategyFactory" 
        class="org.vfny.geoserver.servlets.ServiceStrategyFactory">
        <constructor-arg ref="geoServer"/>
    </bean>
    
    <bean id="speedServiceStrategy" name="SPEED"
        class="org.vfny.geoserver.servlets.SpeedStrategy"/>
        
    <bean id="fileServiceStrategy" name="FILE"
        class="org.vfny.geoserver.servlets.FileStrategy"/>
        
    <bean id="bufferServiceStrategy" name="BUFFER"
        class="org.vfny.geoserver.servlets.BufferStrategy"/>
        
    <bean id="partialBufferServiceStrategy2" name="PARTIAL-BUFFER2"
        class="org.vfny.geoserver.servlets.PartialBufferStrategy2"/>
        
    <!-- 
        custom property editors
     -->
    <bean id="customEditorConfigurer" 
     class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
          <map>
              <entry key="org.geotools.util.Version">
                <bean class="org.geoserver.platform.util.VersionPropertyEditor"/>
             </entry>
          </map>
        </property>
    </bean>
        
        
    <!--  dispatcher -->
    <bean id="dispatcher" class="org.geoserver.ows.Dispatcher"/>

    <!-- file publisher, allows parts of the data dir to be published as static files (used
         to publish styles, www and by wcs 1.1.1 -->
    <bean id="filePublisher" class="org.geoserver.ows.FilePublisher">
      <constructor-arg ref="resourceLoader" />
    </bean>
    
    <!-- classpath publisher, allows resources in the classpath to be published as static files -->
    <bean id="classpathPublisher" class="org.geoserver.ows.ClasspathPublisher"/>
    
  <!-- jai initializer -->
  <bean id="jaiInitializer" class="org.geoserver.jai.JAIInitializer"/>
  
  <!-- coverage access initializer -->
  <bean id="coverageAccessInitializer" class="org.geoserver.coverage.CoverageAccessInitializer">
  </bean>
  
  <!-- logging initializer -->
  <bean id="loggingInitializer" class="org.geoserver.logging.LoggingInitializer">
    <property name="resourceLoader" ref="resourceLoader"/>
  </bean>
  
  <!-- resource pool initializer -->
  <bean id="resourcePoolInitializer" class="org.geoserver.catalog.ResourcePoolInitializer">
  </bean>
  
  <!-- security wrapper factories  -->
  <bean id="defaultDataSecurityFactory" class="org.geoserver.security.decorators.DefaultSecureDataFactory"/>
  <bean id="defaultCatalogSecurityFactory" class="org.geoserver.security.decorators.DefaultSecureCatalogFactory"/>
  
  <bean id="disabledServiceChecker" class="org.geoserver.ows.DisabledServiceCheck"/>
  
  <bean id="dispatcherMapping" 
    class="org.geoserver.ows.OWSHandlerMapping">
    <constructor-arg ref="catalog"/>
	 <property name="alwaysUseFullPath" value="true"/>
	 <property name="mappings">
      <props>
        <prop key="/ows">dispatcher</prop>
        <prop key="/ows/**">dispatcher</prop>
      </props>
    </property>
  </bean>
  
  <bean id="filePublisherMapping"
    class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
     <property name="alwaysUseFullPath" value="true"/>
     <property name="mappings">
       <props>
        <prop key="/styles/**">filePublisher</prop>
        <prop key="/www/**">filePublisher</prop>
       </props>
     </property>
  </bean>
  
  <bean id="classpathPublisherMapping"
    class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
     <property name="alwaysUseFullPath" value="true"/>
     <property name="mappings">
       <props>
        <prop key="/schemas/**">classpathPublisher</prop>
        <prop key="/j_acegi_security_check">classpathPublisher</prop>
        <prop key="/j_spring_security_check">classpathPublisher</prop>
       </props>
     </property>
  </bean>
  
  <!-- geotools repository adapter for catalog -->
  <bean id="catalogRepository" class="org.geoserver.catalog.CatalogRepository">
    <constructor-arg ref="catalog"/>
  </bean>
  
  <!-- the proxyfing URL mangler -->
  <bean id="proxyfier" class="org.geoserver.ows.ProxifyingURLMangler">
    <constructor-arg index="0" ref="geoServer"/>
  </bean>
  
  <!-- URL mangler for workspace/layers accessed through the /ows?service=... service end points -->
  <bean id="owsDispatcherLocalWorkspaceURLManger" class="org.geoserver.ows.LocalWorkspaceURLMangler">
    <constructor-arg value="ows"/>
  </bean>
  
  <!-- xstream persister factory -->
  <bean id="xstreamPersisterFactory" class="org.geoserver.config.util.XStreamPersisterFactory"/>

  <!-- workspace local callback -->
  <bean id="workspaceLocal" class="org.geoserver.ows.LocalWorkspaceCallback">
     <constructor-arg ref="geoServer"/>  
  </bean>
  
  <bean id="updateSequenceListener" class="org.geoserver.config.UpdateSequenceListener">
	<constructor-arg ref="geoServer"/>
  </bean>
  
  <bean id="namespaceWorkspaceConsistencyListener" class="org.geoserver.catalog.NamespaceWorkspaceConsistencyListener">
    <constructor-arg ref="catalog"/>
  </bean>
  
  <!-- Hides resources in other workspaces when using virtual services -->
  <bean id="localWorkspaceFilter" class="org.geoserver.ows.LocalWorkspaceCatalogFilter">
    <constructor-arg ref="rawCatalog"/> 
  </bean>
  <!-- Hides non advertised resources and layers -->
  <bean id="advertisedResourceFilter" class="org.geoserver.catalog.AdvertisedResourceFilter"/>

  <!-- Alllows to lock the config subsyste to that we serialize accesses to it -->
  <bean id="configurationLock" class="org.geoserver.GeoServerConfigurationLock"/>
  
  <!-- Automatically injects a env map into the env function -->
  <bean id="enviromentInjector" class="org.geoserver.ows.EnviromentInjectionCallback"/>
  
   <!-- Thread local transfers -->
  <bean id="dispatcherRequestTransfer" class="org.geoserver.threadlocals.PublicThreadLocalTransfer">
    <constructor-arg index="0" value="org.geoserver.ows.Dispatcher"/>
    <constructor-arg index="1" value="REQUEST"/>
  </bean>
  <bean id="adminRequestTransfer" class="org.geoserver.threadlocals.AdminRequestThreadLocalTransfer"/>
  <bean id="authenticationTransfer" class="org.geoserver.threadlocals.AuthenticationThreadLocalTransfer"/>
  <bean id="localLayerTransfer" class="org.geoserver.threadlocals.LocalLayerThreadLocalTransfer"/>
  <bean id="localWorkspaceTransfer" class="org.geoserver.threadlocals.LocalWorkspaceThreadLocalTransfer"/>
</beans>
