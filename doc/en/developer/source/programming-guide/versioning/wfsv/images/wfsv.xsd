<xsd:schema 
   targetNamespace="http://www.opengis.net/wfsv"
   xmlns:wfsv="http://www.opengis.net/wfsv"
   xmlns:wfs="http://www.opengis.net/wfs"
   xmlns:ogc="http://www.opengis.net/ogc"
   xmlns:ows="http://www.opengis.net/ows"
   xmlns:gml="http://www.opengis.net/gml"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   elementFormDefault="qualified" version="1.1.0">

   <!-- ==============================================================
        Includes and Imports
        ============================================================== -->
   <xsd:import namespace="http://www.opengis.net/wfs"
               schemaLocation="./wfs.xsd"/>
   <xsd:import namespace="http://www.opengis.net/ogc"
               schemaLocation="../../filter/1.1.0/filter.xsd"/>

   <!-- ================================================================== -->
   <!-- =   GETLOG Request and Response                                  = -->
   <!-- ================================================================== -->
   <xsd:element name="GetLog" type="wfsv:GetLogType">
      <xsd:annotation>
         <xsd:documentation>
            The GetLog element is used to request that a Versioning Web Feature
            Service return the change history for features of one or 
            more feature types.
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:complexType name="GetLogType">
      <xsd:annotation>
         <xsd:documentation>
            A GetLog element contains one or more DifferenceQuery elements
            that describe a diffence query operation on one feature type.  
            In response to a GetLog request, a Web Feature Service
            must be able to generate a list of logs entries for features matched
            by the DifferenceQuery parameters. Each log entry is an instance
            of the ChangeSet feature type.
            In response to a GetFeature request, a Versioning Web Feature Service
            must be able to generate a GML3 response that validates
            using a schema generated by the DescribeFeatureType request against
            the ChangeSets feature type.
            A Web Feature Service may support other possibly non-XML
            (and even binary) output formats as long as those formats
            are advertised in the capabilities document.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="wfs:BaseRequestType">
            <xsd:sequence>
               <xsd:element ref="wfsv:DifferenceQuery" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="resultType"
                           type="wfs:ResultTypeType" use="optional"
                           default="results">
               <xsd:annotation>
                  <xsd:documentation>
                     The resultType attribute is used to indicate
                     what response a wfsv should return to user once
                     a GetFeature request is processed.
                     Possible values are:
                        results - meaning that the full response set
                                  (i.e. all the feature instances) 
                                  should be returned.
                        hits    - meaning that an empty response set
                                  should be returned (i.e. no feature
                                  instances should be returned) but
                                  the "numberOfFeatures" attribute
                                  should be set to the number of feature
                                  instances that would be returned.
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="outputFormat"
                           type="xsd:string" use="optional"
                           default="text/xml; subtype=gml/3.1.1">
               <xsd:annotation>
                  <xsd:documentation>
                     The outputFormat attribute is used to specify the output
                     format that the Versioning Web Feature Service should generate in
                     response to a GetLog element.
                     The default value of 'text/xml; subtype=gml/3.1.1'
                     indicates that the output is an XML document that
                     conforms to the Geography Markup Language (GML)
                     Implementation Specification V3.1.1.
                     For the purposes of experimentation, vendor extension,
                     or even extensions that serve a specific community of
                     interest, other acceptable output format values may be
                     used to specify other formats as long as those values
                     are advertised in the capabilities document.
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="maxFeatures"
                           type="xsd:positiveInteger" use="optional">
               <xsd:annotation>
                  <xsd:documentation>
                     The maxFeatures attribute is used to specify the maximum
                     number of features that a GetFeature operation should
                     generate (regardless of the actual number of query hits).
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="DifferenceQuery" type="wfsv:DifferenceQueryType">
      <xsd:annotation>
         <xsd:documentation>
            The DifferenceFilter element is used to gather differences in features
            matched by a standard OGC filter at starting and ending featureVersion, and a filter used
            to match 
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:complexType name="DifferenceQueryType">
      <xsd:sequence>
        <xsd:element ref="ogc:Filter" minOccurs="0" maxOccurs="1">
          <xsd:annotation>
             <xsd:documentation>
                The Filter element is used to define spatial and/or non-spatial
                constraints on query.  Spatial constrains use GML3 to specify
                the constraining geometry.  A full description of the Filter
                element can be found in the Filter Encoding Implementation
                Specification.
             </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="typeName" type="xsd:QName" use="required">
        <xsd:annotation>
           <xsd:documentation>
              The typeName attribute is a single feature type name that indicates which type
              of feature instances should be included in the reponse set.  
              The names must be a valid type that belong to this query's feature content
              as defined by the GML Application Schema.
           </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="fromFeatureVersion" type="xsd:string" default="FIRST">
   	   <xsd:annotation>
   	      <xsd:documentation>
   	         Same as featureVersion in QueryType, but this indicates a starting feature version
   	         for a difference and log operations.
   	      </xsd:documentation>
   	   </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="toFeatureVersion" type="xsd:string" use="optional" default="LAST">
       <xsd:annotation>
          <xsd:documentation>
             Same as featureVersion in QueryType, indicates the second version to be used for
             performing a difference of log operation.
          </xsd:documentation>
       </xsd:annotation>
      </xsd:attribute>
   </xsd:complexType>
   <!-- ================================================================== -->
   <!-- =   GETDIFF Request and Response                                 = -->
   <!-- ================================================================== -->
   <xsd:element name="GetDiff" type="wfsv:GetDiffType">
      <xsd:annotation>
         <xsd:documentation>
            The GetDiff element is used to request that a Versioning Web Feature
            Service returns a transaction command that can be used to alter features
            at version m to turn them into version n
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:complexType name="GetDiffType">
      <xsd:annotation>
         <xsd:documentation>
            A GetDiff element contains one or more DifferenceQuery elements
            that describe a difference query operation on one feature type.  In
            response to a GetDiff request, a Versioning Web Feature Service
            must be able to generate a Transaction command that can be used
            to alter features at fromFeatureVersion and alter them into features
            at toFeatureVersion
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="wfs:BaseRequestType">
            <xsd:sequence>
               <xsd:element ref="wfsv:DifferenceQuery" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="outputFormat"
                           type="xsd:string" use="optional"
                           default="application/xml; subtype=wfsv-transaction/1.1.0">
               <xsd:annotation>
                  <xsd:documentation>
                     The outputFormat attribute is used to specify the output
                     format that the Versioning Web Feature Service should generate in
                     response to a GetDiff or GetFeatureWithLock element.
                     The default value of 'application/xml; subtype=wfsv-transaction/1.1.0'
                     indicates that the output is an XML document that
                     conforms to the WFS 1.1.0 Transaction definition.
                     For the purposes of experimentation, vendor extension,
                     or even extensions that serve a specific community of
                     interest, other acceptable output format values may be
                     used to specify other formats as long as those values
                     are advertised in the capabilities document.
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <!-- ================================================================== -->
   <!-- =   Extended Transaction elements: update                        = -->
   <!-- ================================================================== -->
   <xsd:element name="VersionedUpdate" type="wfsv:VersionedUpdateElementType" substitutionGroup="wfs:Update"/>
   <xsd:complexType name="VersionedUpdateElementType" >
      <xsd:complexContent>
         <xsd:extension base="wfs:UpdateElementType">
            <xsd:attribute name="featureVersion" type="xsd:string" use="required">
               <xsd:annotation>
                  <xsd:documentation>
                     The syntax and semantics is the same as featureVersion in Query. If specified,
                     update will check that every updated feature is still at the specified version before
                     executing, and will fail if a change occurred on the server in the meantime.
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <!-- ================================================================== -->
   <!-- =   Extended Transaction elements: delete                        = -->
   <!-- ================================================================== -->
   <xsd:element name="VersionedDelete" type="wfsv:VersionedDeleteElementType" substitutionGroup="wfs:Delete"/>
   <xsd:complexType name="VersionedDeleteElementType" >
      <xsd:complexContent>
         <xsd:extension base="wfs:DeleteElementType">
            <xsd:attribute name="featureVersion" type="xsd:string" use="required">
               <xsd:annotation>
                  <xsd:documentation>
                     See VersionedUpdateElementType featureVersion attribute.
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <!-- ================================================================== -->
   <!-- =   Extended Transaction elements: rollback                      = -->
   <!-- ================================================================== -->
   <xsd:element name="Rollback" type="wfsv:RollbackType" substitutionGroup="wfs:Native">
      <xsd:annotation>
         <xsd:documentation>
            Rolls back the changes occurred on all matched features between
            fromFeatureVersion and featureVersion
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:complexType name="RollbackType">
      <xsd:complexContent>
         <xsd:extension base="wfs:NativeType">
            <xsd:sequence>
               <xsd:element ref="wfsv:DifferenceQuery" minOccurs="1" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        The difference filter will be used to compute a diff to be applied
                        in order to perform the rollback. A rollback is conceptually just
                        a Transaction applied on the result of a back-diff between two
                        revisions.
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="handle" type="xsd:string" use="optional">
               <xsd:annotation>
                  <xsd:documentation>
                     The handle attribute allows a client application
                     to assign a client-generated request identifier
                     to an Insert action.  The handle is included to
                     facilitate error reporting.  If a Rollback action
                     in a Transaction request fails, then a Versioning WFS may
                     include the handle in an exception report to localize
                     the error.  If no handle is included of the offending
                     Rollback element then a WFS may employee other means of
                     localizing the error (e.g. line number).
                  </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
</xsd:schema>
